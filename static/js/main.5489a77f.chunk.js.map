{"version":3,"sources":["Components/User/User.js","Components/TodoList/TodoItem.js","Components/TodoList/TodoList.js","Components/Errors/Errors.js","Components/Form/TextInput.js","Components/Form/Select.js","Components/Form/Checkbox.js","Components/NewTodo.js","api/users.js","App.js","api/todos.js","index.js"],"names":["User","id","name","className","data-user-id","TodoItem","title","completed","user","index","setTodoStatus","deleteTodo","cn","htmlFor","type","onClick","checked","onChange","defaultProps","TodoList","todoList","map","todo","key","Error","display","isValid","text","TextInput","header","value","errorTexts","handler","e","target","Select","options","option","Checkbox","NewTodo","state","userId","settings","maxTitleLength","pattern","handleFields","field","valueCleaned","replace","length","slice","setTodoProp","addNewTodo","preventDefault","setState","props","resetState","this","setValid","trim","Number","users","onSubmit","Component","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","preparedTodos","item","userInfo","find","preparedUsers","App","todoIdCounter","newTodo","filter","React","ReactDOM","render","document","getElementById"],"mappings":"kVAeeA,G,MAXF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACX,yBAAKC,UAAU,kBAAkBC,eAAcH,GAA/C,UACMC,MCDFG,EAAW,SAAC,GAAD,IACfC,EADe,EACfA,MACAC,EAFe,EAEfA,UACAC,EAHe,EAGfA,KACAP,EAJe,EAIfA,GACAQ,EALe,EAKfA,MACAC,EANe,EAMfA,cACAC,EAPe,EAOfA,WAPe,OASf,wBAAIR,UAAWS,IAAG,aAAc,CAAE,mBAAoBL,KACpD,2BAAOM,QAASZ,EAAIE,UAAU,eAC5B,0BAAMA,UAAU,oBAAhB,UACMM,EADN,OAGA,0BAAMN,UAAU,oBAAhB,UACMG,EADN,eACkBL,IAElB,kBAAC,EAASO,GACV,4BACEM,KAAK,SACLX,UAAU,mBACVY,QAAS,kBAAMJ,EAAWV,MAE5B,2BACEA,GAAIA,EACJa,KAAK,WACLE,QAAST,EACTJ,UAAU,sBACVc,SAAU,kBAAMP,EAAcT,SAMtCI,EAASa,aAAe,GAeTb,QCxBAc,EAzBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUV,EAAb,EAAaA,cAAeC,EAA5B,EAA4BA,WAA5B,OACf,oCACE,oDACA,wBAAIR,UAAU,mBACXiB,EAASC,KAAI,SAACC,EAAMb,GAAP,OACZ,kBAAC,EAAD,iBACMa,EADN,CAEEb,MAAOA,EAAQ,EACfC,cAAeA,EACfC,WAAYA,EACZY,IAAKD,EAAKrB,Y,OCZduB,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,QAASC,EAArB,EAAqBA,KAArB,OACZF,IAAYC,GACV,yBAAKvB,UAAU,eACZwB,IAKPH,EAAMN,aAAe,CACnBO,SAAS,EACTC,SAAS,GASIF,QCSAI,EA3BG,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQ5B,EAAX,EAAWA,GAAI6B,EAAf,EAAeA,MAAOJ,EAAtB,EAAsBA,QAASK,EAA/B,EAA+BA,WAAYC,EAA3C,EAA2CA,QAA3C,OAChB,2BAAOnB,QAASZ,EAAIE,UAAU,eAC3B0B,GAAM,UAAOA,EAAP,MACP,2BACE5B,GAAIA,EACJE,UAAU,cACVW,KAAK,OACLgB,MAAOA,EACPb,SAAU,SAAAgB,GAAC,OAAID,EAAQC,EAAEC,OAAOjC,GAAIgC,EAAEC,OAAOJ,UAE/C,kBAAC,EAAD,CAAOL,QAASC,EAAQD,QAASC,QAASA,EAAQzB,GAAK0B,KAAMI,MCmClDI,EA7CA,SAAC,GAAD,IACbN,EADa,EACbA,OACA5B,EAFa,EAEbA,GACA6B,EAHa,EAGbA,MACAM,EAJa,EAIbA,QACAV,EALa,EAKbA,QACAK,EANa,EAMbA,WACAC,EAPa,EAObA,QAPa,OASb,2BAAOnB,QAASZ,EAAIE,UAAU,eAC3B0B,GAAM,UAAOA,EAAP,MACP,4BACE5B,GAAIA,EACJE,UAAU,cACV2B,MAAOA,EACPb,SAAU,SAAAgB,GAAC,OAAID,EAAQC,EAAEC,OAAOjC,GAAIgC,EAAEC,OAAOJ,SAE7C,4BAAQA,MAAO,IACdM,EAAQf,KAAI,SAAAgB,GAAM,OACjB,4BAAQP,MAAOO,EAAOpC,GAAIsB,IAAKc,EAAOpC,IACnCoC,EAAOnC,UAId,kBAAC,EAAD,CAAOuB,QAASC,EAAQD,QAASC,QAASA,EAAQzB,GAAK0B,KAAMI,MCzB3DO,EAAW,SAAC,GAAD,IAAGT,EAAH,EAAGA,OAAQ5B,EAAX,EAAWA,GAAIe,EAAf,EAAeA,QAASgB,EAAxB,EAAwBA,QAAxB,OACf,2BAAOnB,QAASZ,EAAIE,UAAU,eAC3B0B,GAAM,UAAOA,EAAP,MACP,2BACE5B,GAAIA,EACJE,UAAU,iBACVW,KAAK,WACLE,QAASA,EACTC,SAAU,SAAAgB,GAAC,OAAID,EAAQC,EAAEC,OAAOjC,IAAKe,QAK3CsB,EAASpB,aAAe,CACtBW,OAAQ,IAUKS,QCyHAC,E,4MA7IbC,MAAQ,CACNC,OAAQ,EACRnC,MAAO,GACPC,WAAW,EACXmB,QAAS,CACPD,SAAS,EACTnB,OAAO,EACPmC,QAAQ,I,EAIZC,SAAW,CACTC,eAAgB,GAChBC,QAAS,wB,EAGXb,WAAW,CACTzB,MAAO,yBACPE,KAAM,wB,EA6BRqC,aAAe,SAACC,EAAOhB,GACrB,GAAqB,mBAAVA,EAAX,CAD+B,MAOK,EAAKY,SAAjCE,EAPuB,EAOvBA,QAASD,EAPc,EAOdA,eACbI,EAAejB,EAAMkB,QAAQJ,EAAS,IAAII,QAAQ,UAAW,KAE7DD,EAAaE,OAASN,IACxBI,EAAeA,EAAaG,MAAM,EAAGP,IAGvC,EAAKQ,YAAYL,EAAOC,QAZtB,EAAKI,YAAYL,EAAOhB,I,EAe5BsB,WAAa,SAACnB,GACZA,EAAEoB,iBADgB,IAEV3B,EAAY,EAAKc,MAAjBd,QAER,EAAK4B,UAAS,SAAAd,GAAK,sBACdA,EADc,CAEjBd,QAAQ,eACHc,EAAMd,QADJ,CAELD,SAAS,SAITC,EAAQpB,OAASoB,EAAQe,SAC3B,EAAKc,MAAMH,WAAW,EAAKZ,OAC3B,EAAKgB,e,0DAzDGjC,EAAKO,GACf2B,KAAKC,SAASnC,EAAKO,GACnB2B,KAAKH,UAAS,SAAAd,GAAK,sBACdA,EADc,eAEhBjB,EAAMO,S,+BAIFP,EAAKO,GACA,UAARP,GAAmBO,EAAM6B,OAAOV,OAAS,GAIjC,WAAR1B,GAAsC,IAAlBqC,OAAO9B,IAI/B2B,KAAKH,UAAS,SAAAd,GAAK,sBACdA,EADc,CAEjBd,QAAQ,eACHc,EAAMd,QADJ,eAEJH,GAAM,W,mCAyCXkC,KAAKH,SAAS,CACZb,OAAQ,EACRnC,MAAO,GACPC,WAAW,EACXmB,QAAS,CACPD,SAAS,EACTnB,OAAO,EACPmC,QAAQ,O,+BAKJ,IACAoB,EAAUJ,KAAKF,MAAfM,MADD,EAEuCJ,KAAKjB,MAA3CC,EAFD,EAECA,OAAQnC,EAFT,EAESA,MAAOC,EAFhB,EAEgBA,UAAWmB,EAF3B,EAE2BA,QAElC,OACE,0BAAMoC,SAAUL,KAAKL,WAAYjD,UAAU,cACzC,kBAAC,EAAD,CACE0B,OAAO,WACP5B,GAAG,QACH6B,MAAOxB,EACPoB,QAASA,EACTK,WAAY0B,KAAK1B,WAAWzB,MAC5B0B,QAASyB,KAAKZ,eAGhB,kBAAC,EAAD,CACEhB,OAAO,OACP5B,GAAG,SACH6B,MAAOW,EACPL,QAASyB,EACTnC,QAASA,EACTK,WAAY0B,KAAK1B,WAAWvB,KAC5BwB,QAASyB,KAAKZ,eAGhB,kBAAC,EAAD,CACEhB,OAAO,YACP5B,GAAG,YACHe,QAAST,EACTyB,QAASyB,KAAKZ,eAGhB,4BAAQ/B,KAAK,SAASX,UAAU,gBAAhC,e,GAhIc4D,aCmOPF,G,MAzOD,CACZ,CACE5D,GAAI,EACJC,KAAM,gBACN8D,SAAU,OACVC,MAAO,oBACPC,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,wBACPC,QAAS,gBACTC,QAAS,CACP1E,KAAM,kBACN2E,YAAa,yCACbC,GAAI,gCAGR,CACE7E,GAAI,EACJC,KAAM,eACN8D,SAAU,YACVC,MAAO,oBACPC,QAAS,CACPC,OAAQ,gBACRC,MAAO,YACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,aAGTC,MAAO,sBACPC,QAAS,gBACTC,QAAS,CACP1E,KAAM,eACN2E,YAAa,iCACbC,GAAI,qCAGR,CACE7E,GAAI,EACJC,KAAM,mBACN8D,SAAU,WACVC,MAAO,qBACPC,QAAS,CACPC,OAAQ,oBACRC,MAAO,YACPC,KAAM,gBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,aAGTC,MAAO,iBACPC,QAAS,cACTC,QAAS,CACP1E,KAAM,qBACN2E,YAAa,oCACbC,GAAI,oCAGR,CACE7E,GAAI,EACJC,KAAM,mBACN8D,SAAU,WACVC,MAAO,4BACPC,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,cAGTC,MAAO,oBACPC,QAAS,WACTC,QAAS,CACP1E,KAAM,gBACN2E,YAAa,2CACbC,GAAI,yCAGR,CACE7E,GAAI,EACJC,KAAM,mBACN8D,SAAU,SACVC,MAAO,2BACPC,QAAS,CACPC,OAAQ,eACRC,MAAO,YACPC,KAAM,aACNC,QAAS,QACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,gBACPC,QAAS,eACTC,QAAS,CACP1E,KAAM,cACN2E,YAAa,uCACbC,GAAI,qCAGR,CACE7E,GAAI,EACJC,KAAM,uBACN8D,SAAU,mBACVC,MAAO,0BACPC,QAAS,CACPC,OAAQ,oBACRC,MAAO,WACPC,KAAM,gBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,uBACPC,QAAS,UACTC,QAAS,CACP1E,KAAM,oBACN2E,YAAa,qCACbC,GAAI,qCAGR,CACE7E,GAAI,EACJC,KAAM,kBACN8D,SAAU,eACVC,MAAO,yBACPC,QAAS,CACPC,OAAQ,YACRC,MAAO,YACPC,KAAM,YACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,YAGTC,MAAO,eACPC,QAAS,WACTC,QAAS,CACP1E,KAAM,cACN2E,YAAa,qCACbC,GAAI,kCAGR,CACE7E,GAAI,EACJC,KAAM,2BACN8D,SAAU,gBACVC,MAAO,uBACPC,QAAS,CACPC,OAAQ,mBACRC,MAAO,YACPC,KAAM,YACNC,QAAS,QACTC,IAAK,CACHC,IAAK,WACLC,IAAK,cAGTC,MAAO,oBACPC,QAAS,eACTC,QAAS,CACP1E,KAAM,kBACN2E,YAAa,gCACbC,GAAI,kCAGR,CACE7E,GAAI,EACJC,KAAM,kBACN8D,SAAU,WACVC,MAAO,0BACPC,QAAS,CACPC,OAAQ,aACRC,MAAO,YACPC,KAAM,iBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,cAGTC,MAAO,uBACPC,QAAS,aACTC,QAAS,CACP1E,KAAM,gBACN2E,YAAa,wCACbC,GAAI,qCAGR,CACE7E,GAAI,GACJC,KAAM,qBACN8D,SAAU,iBACVC,MAAO,yBACPC,QAAS,CACPC,OAAQ,kBACRC,MAAO,YACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,eACPC,QAAS,cACTC,QAAS,CACP1E,KAAM,aACN2E,YAAa,oCACbC,GAAI,+BC5NJC,ECNQ,CACZ,CACEtC,OAAQ,EACRxC,GAAI,EACJK,MAAO,qBACPC,WAAW,GAEb,CACEkC,OAAQ,EACRxC,GAAI,EACJK,MAAO,qCACPC,WAAW,IDLac,KAAI,SAAC2D,GAC/B,IAAM1D,EAAI,eAAQ0D,GACZC,EAAWpB,EAAMqB,MAAK,SAAA1E,GAAI,OAAIA,EAAKP,KAAOqB,EAAKmB,UAOrD,OALAnB,EAAKd,KAAO,CACVP,GAAIgF,EAAShF,GACbC,KAAM+E,EAAS/E,MAGVoB,KAGH6D,EAAgBtB,EAAMxC,KAAI,SAAAb,GAAI,MAAK,CACvCP,GAAIO,EAAKP,GACTC,KAAMM,EAAKN,SAsEEkF,E,4MAlEb5C,MAAQ,CACNpB,SAAS,YAAK2D,GACdM,cAAeN,EAAc9B,OAAS,G,EAGxCvC,cAAgB,SAACT,GACf,EAAKqD,UAAS,SAAAd,GAAK,MAAK,CACtBpB,SAAUoB,EAAMpB,SAASC,KAAI,SAAAC,GAAI,OAC9BA,EAAKrB,KAAOA,EAAb,eAEOqB,EAFP,CAGIf,WAAYe,EAAKf,YAEjBe,U,EAKV8B,WAAa,SAACkC,GAAa,IACjB7C,EAA6B6C,EAA7B7C,OAAQnC,EAAqBgF,EAArBhF,MAAOC,EAAc+E,EAAd/E,UAEvB,EAAK+C,UAAS,SAAAd,GAAK,MAAK,CACtBpB,SAAS,GAAD,mBACHoB,EAAMpB,UADH,CAEN,CACEqB,QAASA,EACTxC,GAAIuC,EAAM6C,cACV/E,QACAC,YACAC,KAAM,CACJP,IAAKwC,EACLvC,KAAM2D,EAAMqB,MAAK,SAAA1E,GAAI,OAAIA,EAAKP,MAAQwC,KAAQvC,SAIpDmF,cAAe7C,EAAM6C,cAAgB,O,EAIzC1E,WAAa,SAACV,GACZ,EAAKqD,UAAS,SAAAd,GAAK,MAAK,CACtBpB,SAAU,YAAIoB,EAAMpB,UAAUmE,QAAO,SAAAjE,GAAI,OAAIA,EAAKrB,KAAOA,U,uDAInD,IACAmB,EAAaqC,KAAKjB,MAAlBpB,SAER,OACE,yBAAKjB,UAAU,OACb,6CACA,kBAAC,EAAD,CAAS0D,MAAOsB,EAAe/B,WAAYK,KAAKL,aAChD,2BACE,yCACCS,EAAMZ,QAET,kBAAC,EAAD,CACE7B,SAAUA,EACVV,cAAe+C,KAAK/C,cACpBC,WAAY8C,KAAK9C,kB,GA5DT6E,IAAMzB,WErBxB0B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5489a77f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './User.css';\n\nconst User = ({ id, name }) => (\n  <div className=\"user user__name\" data-user-id={id}>\n    {`${name}`}\n  </div>\n);\n\nUser.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport User from '../User/User';\n\nconst TodoItem = ({\n  title,\n  completed,\n  user,\n  id,\n  index,\n  setTodoStatus,\n  deleteTodo,\n}) => (\n  <li className={cn('todo__item', { 'todo__item--done': completed })}>\n    <label htmlFor={id} className=\"todo__label\">\n      <span className=\"todo__item-index\">\n        {`${index}. `}\n      </span>\n      <span className=\"todo__item-title\">\n        {`${title} - #${id}`}\n      </span>\n      <User {...user} />\n      <button\n        type=\"button\"\n        className=\"todo__delete-btn\"\n        onClick={() => deleteTodo(id)}\n      />\n      <input\n        id={id}\n        type=\"checkbox\"\n        checked={completed}\n        className=\"todo__item-checkbox\"\n        onChange={() => setTodoStatus(id)}\n      />\n    </label>\n  </li>\n);\n\nTodoItem.defaultProps = {};\n\nTodoItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  user: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n  id: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired,\n  setTodoStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.css';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todoList, setTodoStatus, deleteTodo }) => (\n  <>\n    <h1>Static list of todos</h1>\n    <ul className=\"todo todo__list\">\n      {todoList.map((todo, index) => (\n        <TodoItem\n          {...todo}\n          index={index + 1}\n          setTodoStatus={setTodoStatus}\n          deleteTodo={deleteTodo}\n          key={todo.id}\n        />\n      ))}\n    </ul>\n  </>\n);\n\nTodoList.propTypes = {\n  todoList: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  setTodoStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = ({ display, isValid, text }) => (\n  display && !isValid && (\n    <div className=\"todo__error\">\n      {text}\n    </div>\n  )\n);\n\nError.defaultProps = {\n  display: false,\n  isValid: false,\n};\n\nError.propTypes = {\n  display: PropTypes.bool,\n  isValid: PropTypes.bool,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Error;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Error from '../Errors/Errors';\n\nconst TextInput = ({ header, id, value, isValid, errorTexts, handler }) => (\n  <label htmlFor={id} className=\"todo__label\">\n    {header && `${header}: `}\n    <input\n      id={id}\n      className=\"todo__field\"\n      type=\"text\"\n      value={value}\n      onChange={e => handler(e.target.id, e.target.value)}\n    />\n    <Error display={isValid.display} isValid={isValid[id]} text={errorTexts} />\n  </label>\n);\n\nTextInput.propTypes = {\n  header: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  isValid: PropTypes.shape({\n    display: PropTypes.bool.isRequired,\n    title: PropTypes.bool.isRequired,\n    userId: PropTypes.bool.isRequired,\n  }).isRequired,\n  errorTexts: PropTypes.string.isRequired,\n  handler: PropTypes.func.isRequired,\n};\n\nexport default TextInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Error from '../Errors/Errors';\n\nconst Select = ({\n  header,\n  id,\n  value,\n  options,\n  isValid,\n  errorTexts,\n  handler,\n}) => (\n  <label htmlFor={id} className=\"todo__label\">\n    {header && `${header}: `}\n    <select\n      id={id}\n      className=\"todo__field\"\n      value={value}\n      onChange={e => handler(e.target.id, e.target.value)}\n    >\n      <option value={0} />\n      {options.map(option => (\n        <option value={option.id} key={option.id}>\n          {option.name}\n        </option>\n      ))}\n    </select>\n    <Error display={isValid.display} isValid={isValid[id]} text={errorTexts} />\n  </label>\n);\n\nSelect.propTypes = {\n  header: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n  options: PropTypes.arrayOf({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n  isValid: PropTypes.shape({\n    display: PropTypes.bool.isRequired,\n    title: PropTypes.bool.isRequired,\n    userId: PropTypes.bool.isRequired,\n  }).isRequired,\n  errorTexts: PropTypes.string.isRequired,\n  handler: PropTypes.func.isRequired,\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Checkbox = ({ header, id, checked, handler }) => (\n  <label htmlFor={id} className=\"todo__label\">\n    {header && `${header}: `}\n    <input\n      id={id}\n      className=\"todo__checkbox\"\n      type=\"checkbox\"\n      checked={checked}\n      onChange={e => handler(e.target.id, !checked)}\n    />\n  </label>\n);\n\nCheckbox.defaultProps = {\n  header: '',\n};\n\nCheckbox.propTypes = {\n  header: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  handler: PropTypes.func.isRequired,\n};\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport TextInput from './Form/TextInput';\nimport Select from './Form/Select';\nimport Checkbox from './Form/Checkbox';\n\nclass NewTodo extends Component {\n  state = {\n    userId: 0,\n    title: '',\n    completed: false,\n    isValid: {\n      display: false,\n      title: false,\n      userId: false,\n    },\n  }\n\n  settings = {\n    maxTitleLength: 60,\n    pattern: /[^A_Za-z0-9.,!?:; ]/g,\n  }\n\n  errorTexts={\n    title: 'Please enter the title',\n    user: 'Please choose a user',\n  }\n\n  setTodoProp(key, value) {\n    this.setValid(key, value);\n    this.setState(state => ({\n      ...state,\n      [key]: value,\n    }));\n  }\n\n  setValid(key, value) {\n    if (key === 'title' && value.trim().length < 3) {\n      return;\n    }\n\n    if (key === 'userId' && Number(value) === 0) {\n      return;\n    }\n\n    this.setState(state => ({\n      ...state,\n      isValid: {\n        ...state.isValid,\n        [key]: true,\n      },\n    }));\n  }\n\n  handleFields = (field, value) => {\n    if (typeof value === 'boolean') {\n      this.setTodoProp(field, value);\n\n      return;\n    }\n\n    const { pattern, maxTitleLength } = this.settings;\n    let valueCleaned = value.replace(pattern, '').replace(/\\s{2,}/g, ' ');\n\n    if (valueCleaned.length > maxTitleLength) {\n      valueCleaned = valueCleaned.slice(0, maxTitleLength);\n    }\n\n    this.setTodoProp(field, valueCleaned);\n  };\n\n  addNewTodo = (e) => {\n    e.preventDefault();\n    const { isValid } = this.state;\n\n    this.setState(state => ({\n      ...state,\n      isValid: {\n        ...state.isValid,\n        display: true,\n      },\n    }));\n\n    if (isValid.title && isValid.userId) {\n      this.props.addNewTodo(this.state);\n      this.resetState();\n    }\n  }\n\n  resetState() {\n    this.setState({\n      userId: 0,\n      title: '',\n      completed: false,\n      isValid: {\n        display: false,\n        title: false,\n        userId: false,\n      },\n    });\n  }\n\n  render() {\n    const { users } = this.props;\n    const { userId, title, completed, isValid } = this.state;\n\n    return (\n      <form onSubmit={this.addNewTodo} className=\"todo__form\">\n        <TextInput\n          header=\"New Todo\"\n          id=\"title\"\n          value={title}\n          isValid={isValid}\n          errorTexts={this.errorTexts.title}\n          handler={this.handleFields}\n        />\n\n        <Select\n          header=\"User\"\n          id=\"userId\"\n          value={userId}\n          options={users}\n          isValid={isValid}\n          errorTexts={this.errorTexts.user}\n          handler={this.handleFields}\n        />\n\n        <Checkbox\n          header=\"Completed\"\n          id=\"completed\"\n          checked={completed}\n          handler={this.handleFields}\n        />\n\n        <button type=\"submit\" className=\"todo__button\">Submit</button>\n      </form>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  users: PropTypes.arrayOf({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n  addNewTodo: PropTypes.func.isRequired,\n};\n\nexport default NewTodo;\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport TodoList from './Components/TodoList/TodoList';\nimport NewTodo from './Components/NewTodo';\nimport './App.css';\n\nimport users from './api/users';\nimport todos from './api/todos';\n\nconst preparedTodos = todos.map((item) => {\n  const todo = { ...item };\n  const userInfo = users.find(user => user.id === todo.userId);\n\n  todo.user = {\n    id: userInfo.id,\n    name: userInfo.name,\n  };\n\n  return todo;\n});\n\nconst preparedUsers = users.map(user => ({\n  id: user.id,\n  name: user.name,\n}));\n\nclass App extends React.Component {\n  state = {\n    todoList: [...preparedTodos],\n    todoIdCounter: preparedTodos.length + 1,\n  }\n\n  setTodoStatus = (id) => {\n    this.setState(state => ({\n      todoList: state.todoList.map(todo => (\n        (todo.id === id)\n          ? {\n            ...todo,\n            completed: !todo.completed,\n          }\n          : todo\n      )),\n    }));\n  };\n\n  addNewTodo = (newTodo) => {\n    const { userId, title, completed } = newTodo;\n\n    this.setState(state => ({\n      todoList: [\n        ...state.todoList,\n        {\n          userId: +userId,\n          id: state.todoIdCounter,\n          title,\n          completed,\n          user: {\n            id: +userId,\n            name: users.find(user => user.id === +userId).name,\n          },\n        },\n      ],\n      todoIdCounter: state.todoIdCounter + 1,\n    }));\n  }\n\n  deleteTodo = (id) => {\n    this.setState(state => ({\n      todoList: [...state.todoList].filter(todo => todo.id !== id),\n    }));\n  }\n\n  render() {\n    const { todoList } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1>Add todo form</h1>\n        <NewTodo users={preparedUsers} addNewTodo={this.addNewTodo} />\n        <p>\n          <span>Users: </span>\n          {users.length}\n        </p>\n        <TodoList\n          todoList={todoList}\n          setTodoStatus={this.setTodoStatus}\n          deleteTodo={this.deleteTodo}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}